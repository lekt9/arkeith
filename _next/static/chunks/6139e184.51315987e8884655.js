"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[132],{99454:(e,s,t)=>{t.d(s,{$3J:()=>sK,$Bv:()=>ip,$IJ:()=>sV,$JM:()=>sF,$Sz:()=>is,$fn:()=>sQ,$qt:()=>eE,$uV:()=>sc,$zC:()=>s_,A02:()=>nH,A6f:()=>ay,ABF:()=>aC,AMl:()=>aS,AOR:()=>tT,ATo:()=>I,AfG:()=>sn,B4n:()=>nf,B9z:()=>tp,BAR:()=>sD,BFw:()=>n_,BPi:()=>t$,BUf:()=>ey,Bgf:()=>ap,BrB:()=>tk,BtD:()=>iA,CDp:()=>s8,CFl:()=>s5,CSL:()=>eg,Cvr:()=>sG,D6z:()=>tF,DWg:()=>n8,DXm:()=>nt,DZJ:()=>np,DcG:()=>iv,Dii:()=>iT,Dwe:()=>nq,DyF:()=>t9,Dzs:()=>eD,E66:()=>nA,EEI:()=>aF,EGs:()=>ix,ENH:()=>iy,EOu:()=>au,Eez:()=>e1,EhR:()=>tl,Els:()=>sC,En$:()=>ih,Exl:()=>aP,FBI:()=>Q,FDW:()=>sh,FMz:()=>nZ,FlG:()=>n5,FlS:()=>eX,FqA:()=>sU,Fx7:()=>Y,GDD:()=>ae,GPZ:()=>ei,GUD:()=>eN,GW7:()=>te,GZG:()=>n$,G_3:()=>so,Gex:()=>nJ,HIB:()=>nl,HO_:()=>nr,Hqk:()=>ic,I6S:()=>eW,I7N:()=>R,IFL:()=>iL,ILj:()=>sW,IMJ:()=>tB,IXX:()=>sw,IZd:()=>t2,IbJ:()=>$,Ifx:()=>eu,Ioh:()=>tb,Irb:()=>na,J1v:()=>e_,Jqv:()=>sP,K2P:()=>tI,K2m:()=>iM,KSb:()=>nT,KVf:()=>aO,KW9:()=>eB,KXo:()=>eI,KZ9:()=>sN,Kf0:()=>ii,Kgc:()=>eA,Kqx:()=>ex,LB1:()=>ax,LCU:()=>et,LNK:()=>sE,LOS:()=>ez,LUG:()=>t3,LdE:()=>an,LdN:()=>ns,LdW:()=>iw,Lqh:()=>sx,M$7:()=>ny,M$B:()=>eH,M8O:()=>t4,MN_:()=>aA,MO:()=>tX,MSH:()=>ev,Mi1:()=>tt,Miw:()=>al,NLC:()=>nO,NLK:()=>nD,NNd:()=>aD,NNm:()=>j,NU:()=>eU,NYs:()=>eJ,Nhw:()=>tG,NlR:()=>ee,O8H:()=>tW,OHg:()=>t7,OIe:()=>s2,ONK:()=>sZ,OWw:()=>ng,OZ1:()=>nS,OdO:()=>tZ,Oic:()=>tS,OjJ:()=>ia,OqU:()=>nj,Osz:()=>eP,PIJ:()=>iO,POT:()=>av,PR4:()=>sM,Pd7:()=>s6,Pkw:()=>to,Psc:()=>nm,Psf:()=>tu,Q2B:()=>tL,Q7k:()=>th,QN7:()=>ag,QNv:()=>e$,Qlb:()=>eQ,Qs5:()=>nI,QuJ:()=>ad,R5h:()=>nd,RCi:()=>ep,RHF:()=>s0,RLG:()=>tO,RVs:()=>sA,Rdx:()=>tz,RqD:()=>nc,RtS:()=>eC,RwB:()=>aT,S2d:()=>iC,S5D:()=>tc,SG6:()=>tA,SH$:()=>nG,SZU:()=>sr,Say:()=>s1,Sjl:()=>ik,Son:()=>eZ,SrL:()=>tj,SuI:()=>am,TCy:()=>nK,TJ$:()=>e7,TJv:()=>n4,TPP:()=>ej,TUE:()=>t0,TVl:()=>nn,Tdw:()=>si,TmS:()=>X,Tmp:()=>nk,TvZ:()=>iG,U$$:()=>im,U2e:()=>e5,Uby:()=>ao,VEm:()=>tw,VN0:()=>eY,VYt:()=>aE,V_N:()=>W,Var:()=>nN,VoQ:()=>tv,Vqq:()=>tq,Vu2:()=>nh,W57:()=>eb,WE3:()=>iE,WTN:()=>ar,WX_:()=>O,Wbk:()=>tV,XHO:()=>td,XKJ:()=>tP,XR2:()=>D,Xcn:()=>nR,XiS:()=>ew,Xp9:()=>B,Y5j:()=>sH,YQv:()=>sd,Yib:()=>se,Ytf:()=>tN,ZQV:()=>sX,ZQh:()=>eh,ZRy:()=>el,Z_F:()=>n3,Zn:()=>ig,Zvm:()=>t6,_98:()=>as,_Lu:()=>nC,_XM:()=>at,a0H:()=>N,a5s:()=>eq,aGS:()=>tR,azf:()=>iN,b0Z:()=>sv,b4r:()=>ts,bAW:()=>sJ,bGu:()=>sp,bQ0:()=>n0,bkG:()=>eF,cWO:()=>e9,ccR:()=>t_,ckI:()=>ni,cq_:()=>tD,cvB:()=>eO,d9Y:()=>tx,dCE:()=>V,dDV:()=>n6,dNl:()=>tg,dTl:()=>nF,dfz:()=>nz,dkn:()=>H,doG:()=>tQ,ea7:()=>su,ej5:()=>iB,ezq:()=>ah,f4g:()=>nX,f76:()=>n9,f9F:()=>iD,fM5:()=>sy,fiz:()=>Z,fon:()=>e2,fpK:()=>nv,fqS:()=>tn,gDx:()=>ai,gLP:()=>eG,gfN:()=>sY,goF:()=>q,gts:()=>no,gyp:()=>eL,hNz:()=>ss,hY6:()=>iF,hZO:()=>io,hmo:()=>en,i51:()=>nW,i96:()=>es,iBL:()=>tU,iQg:()=>ta,icC:()=>ab,ieO:()=>eK,ivj:()=>tf,j0K:()=>em,jDD:()=>eR,jG9:()=>er,jM:()=>aB,jYm:()=>tM,jf9:()=>eM,jre:()=>z,k2T:()=>aa,kCl:()=>e6,kFo:()=>e4,kR_:()=>sk,l1C:()=>nL,l4I:()=>st,lR1:()=>t5,lV$:()=>sl,lbf:()=>ir,lbo:()=>t1,ldC:()=>tr,ldm:()=>U,lqn:()=>nQ,m9r:()=>sB,mFG:()=>sj,mUC:()=>tH,mXx:()=>eV,mbT:()=>ek,n_h:()=>af,nlm:()=>nx,nrk:()=>s3,o$X:()=>it,oHn:()=>nw,oUt:()=>nb,oa3:()=>G,okV:()=>iP,okh:()=>iI,p$H:()=>nE,pTY:()=>iS,pVo:()=>aL,pc$:()=>eS,pct:()=>sz,q1U:()=>E,q8P:()=>ea,qTI:()=>nB,qxW:()=>ib,r9p:()=>ti,rCE:()=>sm,rRW:()=>eo,raf:()=>ac,rbR:()=>sO,rhz:()=>sR,rjh:()=>tm,ryR:()=>n2,s0:()=>sq,s4i:()=>e3,sQR:()=>e0,sSY:()=>sg,sYH:()=>s9,sgd:()=>ef,sld:()=>tY,t78:()=>id,tGD:()=>n7,tLj:()=>iu,tQ_:()=>aw,tbw:()=>aM,teE:()=>K,tnS:()=>ed,tvh:()=>sa,u1H:()=>s4,u3E:()=>ty,uQT:()=>tC,v08:()=>eT,v17:()=>sb,v3$:()=>s$,v4V:()=>nY,v79:()=>sS,vJG:()=>sI,vKQ:()=>nV,vRY:()=>s7,vSH:()=>sL,vee:()=>nP,vpo:()=>sT,wiU:()=>i_,xnh:()=>sf,y8o:()=>tK,yTn:()=>ne,ygE:()=>T,yiZ:()=>nu,ykI:()=>a_,ypw:()=>J,yw4:()=>n1,yxe:()=>nM,z6E:()=>il,z7Z:()=>t8,zMI:()=>nU,zPS:()=>ec,zZI:()=>tE,zp9:()=>e8,zvp:()=>ak,zxW:()=>tJ});var n=t(90016),a=t(20761),i=t(40911),o=t(45774),r=t(62414),l=t(71542),c=t(39078);let{InferenceSession:d,Tensor:_,env:u}=l.ONNX,h={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5},m=new Map,p=new Map,f=new Map;async function g(e,s,t){let n=`onnx/${s}${t.quantized?"_quantized":""}.onnx`,a=await (0,i.st)(e,n,!0,t);try{return await d.create(a,{executionProviders:l.p})}catch(e){if(1===l.p.length&&"wasm"===l.p[0])throw e;return console.warn(e),console.warn("Something went wrong during model construction (most likely a missing operation). Using `wasm` as a fallback. "),await d.create(a,{executionProviders:["wasm"]})}}async function w(e,s){let t=function(e,s){let t=Object.create(null),n=[];for(let a of e.inputNames){let e=s[a];if(!(e instanceof r.es)){n.push(a);continue}t[a]=u.wasm.proxy?e.clone():e}if(n.length>0)throw Error(`An error occurred during model execution: "Missing the following inputs: ${n.join(", ")}.`);let a=Object.keys(s).length,i=e.inputNames.length;if(a>i){let t=Object.keys(s).filter(s=>!e.inputNames.includes(s));console.warn(`WARNING: Too many inputs were provided (${a} > ${i}). The following inputs will be ignored: "${t.join(", ")}".`)}return t}(e,s);try{let s=await e.run(t);return s=function e(s){for(let t in s)s[t]instanceof _?s[t]=new r.es(s[t]):"object"==typeof s[t]&&e(s[t]);return s}(s)}catch(e){throw console.error(`An error occurred during model execution: "${e}".`),console.error("Inputs given to model:",t),e}}function x(e,s){let t=e.config.pad_token_id??null,n=e.config.eos_token_id??null;(0,a.Wy)(n)&&(n=[n]);let i=-1!==s.indexOf(t),o=null===n||!n.includes(t);if(!i||!o)return(0,r.r6)(s);{let e=BigInt64Array.from(s.data.map(e=>e!=t));return new r.es("int64",e,s.dims)}}function y(e,s,t){if(!e.inputNames.includes("position_ids"))return;let n=new BigInt64Array(s.attention_mask.data.length);for(let e=0;e<s.attention_mask.dims[0];++e){let t=e*s.attention_mask.dims[1],a=BigInt(0);for(let e=0;e<s.attention_mask.dims[1];++e){let i=t+e;0n===s.attention_mask.data[i]?n[i]=BigInt(1):(n[i]=a,a+=s.attention_mask.data[i])}}s.position_ids=new r.es("int64",n,s.attention_mask.dims),t&&(s.position_ids=s.position_ids.slice(null,-1).unsqueeze_(-1))}function M(e){return new r.es("bool",[e],[1])}async function k(e,s){let{encoder_outputs:t,past_key_values:n}=s;t||(t=(await C(e,s)).last_hidden_state);let a={input_ids:s.decoder_input_ids,encoder_hidden_states:t},i=!!n;e.decoder_merged_session.inputNames.includes("use_cache_branch")&&(a.use_cache_branch=M(i)),e.decoder_merged_session.inputNames.includes("encoder_attention_mask")&&(a.encoder_attention_mask=s.attention_mask),y(e.decoder_merged_session,a,i),e.addPastKeyValues(a,n);let o=await w(e.decoder_merged_session,a);return new iA({logits:o.logits,past_key_values:n=e.getPastKeyValues(o,n),encoder_outputs:t,...e.getAttentions(o)})}function b(e,s,t,n){let a=[],i=0,o=e.requires_attention_mask??!0,l=t.decoder_input_ids??t.decoder_start_token_id??t.bos_token_id??t.eos_token_id;for(let t of(l instanceof r.es?l=l.tolist().flat():Array.isArray(l)||(l=[l]),s)){t.dims=[1,...t.dims];let s={inputs:t,encoder_outputs:null,prev_model_outputs:null,output_token_ids:l,done:!1,score:0,id:i++};o&&(s.attention_mask=x(e,t)),a.push(s)}return a}async function v(e,s){let t=e.main_input_name,n=s.output_token_ids;s.prev_model_outputs&&(n=n.slice(-1));let a={[t]:s.inputs,decoder_input_ids:function(e){if(e instanceof r.es)return e;if(0===e.length)throw Error("items must be non-empty");if(!Array.isArray(e[0]))return new r.es("int64",BigInt64Array.from(e.map(e=>BigInt(e))),[1,e.length]);if(e.some(s=>s.length!==e[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new r.es("int64",BigInt64Array.from(e.flat().map(e=>BigInt(e))),[e.length,e[0].length])}(n),encoder_outputs:s.encoder_outputs,past_key_values:s.prev_model_outputs?.past_key_values};s.attention_mask&&(a.attention_mask=s.attention_mask);let i=await e.forward(a);return s.prev_model_outputs=i,s.encoder_outputs=i.encoder_outputs,i}function S(e,s){e.output_token_ids=[...e.output_token_ids,s]}async function C(e,s){let t=Object.create(null);for(let n of e.session.inputNames)t[n]=s[n];return e.session.inputNames.includes("token_type_ids")&&!t.token_type_ids&&(t.token_type_ids=new r.es("int64",new BigInt64Array(t.input_ids.data.length),t.input_ids.dims)),await w(e.session,t)}async function F(e,s){let{input_ids:t,past_key_values:n,attention_mask:a}=s,i={input_ids:t,attention_mask:a??x(e,t)},o=!!n;e.session.inputNames.includes("use_cache_branch")&&(i.use_cache_branch=M(o)),y(e.session,i,o),e.addPastKeyValues(i,n);let r=await w(e.session,i);return{logits:r.logits,past_key_values:n=e.getPastKeyValues(r,n)}}function L(e,s,t,n,a){let i=[],o=0;for(let t of s){let s,r=t.tolist().map(Number);t.dims=[1,...t.dims],a?(s=a[o]).dims=[1,...s.dims]:s=x(e,t);let l={input:t,model_input_ids:t,attention_mask:s,prev_model_outputs:null,output_token_ids:r,num_output_tokens:n,done:!1,score:0,id:o++};i.push(l)}return i}async function A(e,s){let t=new BigInt64Array(s.output_token_ids.length).fill(1n),n={input_ids:s.model_input_ids,attention_mask:new r.es("int64",t,[1,t.length]),past_key_values:s.prev_model_outputs?.past_key_values},a=await e.forward(n);return s.prev_model_outputs=a,a}function P(e,s){e.output_token_ids=[...e.output_token_ids,s],e.model_input_ids=new r.es("int64",[BigInt(s)],[1,1])}class E extends a.Ag{main_input_name="input_ids";constructor(e,s){super(),this.config=e,this.session=s;let t=f.get(this.constructor),n=m.get(t);this.can_generate=!1,this._runBeam=null,this._getStartBeams=null,this._updateBeam=null,this._forward=null,n===h.DecoderOnly?(this.can_generate=!0,this._runBeam=A,this._getStartBeams=L,this._updateBeam=P,this._forward=F):n===h.Seq2Seq||n===h.Vision2Seq?(this.can_generate=!0,this._runBeam=v,this._getStartBeams=b,this._updateBeam=S,this._forward=k):(h.EncoderDecoder,this._forward=C)}async dispose(){let e=[];for(let s of Object.keys(this)){let t=this[s];t instanceof d&&e.push(t.handler.dispose())}return await Promise.all(e)}static async from_pretrained(e,{quantized:s=!0,progress_callback:t=null,config:a=null,cache_dir:o=null,local_files_only:r=!1,revision:l="main",model_file_name:c=null}={}){let d,_={quantized:s,progress_callback:t,config:a,cache_dir:o,local_files_only:r,revision:l,model_file_name:c},u=f.get(this),p=m.get(u);return p===h.DecoderOnly?d=await Promise.all([n.z.from_pretrained(e,_),g(e,_.model_file_name??"decoder_model_merged",_),(0,i.yM)(e,"generation_config.json",!1,_)]):p===h.Seq2Seq||p===h.Vision2Seq?d=await Promise.all([n.z.from_pretrained(e,_),g(e,"encoder_model",_),g(e,"decoder_model_merged",_),(0,i.yM)(e,"generation_config.json",!1,_)]):p===h.MaskGeneration?d=await Promise.all([n.z.from_pretrained(e,_),g(e,"vision_encoder",_),g(e,"prompt_encoder_mask_decoder",_)]):p===h.EncoderDecoder?d=await Promise.all([n.z.from_pretrained(e,_),g(e,"encoder_model",_),g(e,"decoder_model_merged",_)]):(p!==h.EncoderOnly&&console.warn(`Model type for '${u??a?.model_type}' not found, assuming encoder-only architecture. Please report this at https://github.com/xenova/transformers.js/issues/new/choose.`),d=await Promise.all([n.z.from_pretrained(e,_),g(e,_.model_file_name??"model",_)])),new this(...d)}async _call(e){return await this.forward(e)}async forward(e){return await this._forward(this,e)}_get_logits_processor(e,s,t=null){let n=new o.Jm;if(null!==e.repetition_penalty&&1!==e.repetition_penalty&&n.push(new o.Jj(e.repetition_penalty)),null!==e.no_repeat_ngram_size&&e.no_repeat_ngram_size>0&&n.push(new o.jF(e.no_repeat_ngram_size)),null!==e.bad_words_ids&&n.push(new o.AE(e.bad_words_ids,e.eos_token_id)),null!==e.min_length&&null!==e.eos_token_id&&e.min_length>0&&n.push(new o.ez(e.min_length,e.eos_token_id)),null!==e.min_new_tokens&&null!==e.eos_token_id&&e.min_new_tokens>0&&n.push(new o.CJ(s,e.min_new_tokens,e.eos_token_id)),null!==e.forced_bos_token_id&&n.push(new o.C9(e.forced_bos_token_id)),null!==e.forced_eos_token_id&&n.push(new o.dZ(e.max_length,e.forced_eos_token_id)),null!==e.begin_suppress_tokens){let t=s>1||null===e.forced_bos_token_id?s:s+1;null!==e.forced_decoder_ids&&(t+=e.forced_decoder_ids[e.forced_decoder_ids.length-1][0]),n.push(new o.GU(e.begin_suppress_tokens,t))}return null!==e.forced_decoder_ids&&n.push(new o.E(e.forced_decoder_ids)),null!==t&&n.extend(t),n}_get_generation_config(e){let s=new o.aP(this.config);return"generation_config"in this&&Object.assign(s,this.generation_config),null!==e&&Object.assign(s,e),s}async generate(e,s=null,t=null,{inputs_attention_mask:n=null}={}){let i;if(!this.can_generate){let e=f.get(this.constructor),s=`The current model class (${e}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`,t=this.config.model_type,n=aW.get(t)??aR.get(t)??aq.get(t)??aX.get(t);throw n&&(s+=` Please use the following class instead: '${n[0]}'`),Error(s)}if(!(e instanceof r.es)&&!(0,a.fU)(e)&&!Array.isArray(e))throw Error(`\`inputs\` must be a Tensor, TypedArray, or Array, but is "${e.constructor.name}".`);if(this.config.is_encoder_decoder)i=0;else if(0===(i=e instanceof r.es?e.dims.at(-1):e.length))throw Error("Must supply a non-empty array of input token ids.");s=this._get_generation_config(s),t=t??new o.Jm,t=this._get_logits_processor(s,i,t);let l=s.eos_token_id;null===l||Array.isArray(l)||(l=[l]);let c=1,d=1+(s.max_new_tokens??1/0),_=Number.isInteger(s.max_length)&&(s.max_new_tokens??null)===null,u=o.Z4.getSampler(s),h=this.getStartBeams(e,s,c,n);for(;h.some(e=>!e.done)&&c<d;){let e=[];for(let n of h){if(n.done){e.push(n);continue}if(_&&n.output_token_ids.length>=s.max_length){n.done=!0,e.push(n);continue}let a=await this.runBeam(n);s.output_attentions&&this.addAttentionsToBeam(n,a),s.output_scores;let i=a.logits.slice(null,-1,null);for(let[s,a]of(t(n.output_token_ids,i),u(i))){let t={...n};this.updateBeam(t,s),t.score+=a,l&&l.includes(s)&&(t.done=!0),e.push(t)}}++c,h=(e=this.groupBeams(e).map(e=>e.sort((e,s)=>s.score-e.score).slice(0,s.num_beams))).flat(),s.callback_function&&s.callback_function(h)}let m=this.groupBeams(h),p=e=>m.map(t=>s.num_return_sequences>1?t.slice(0,s.num_return_sequences).map(s=>s[e]):[t[0][e]]).flat(),g=p("output_token_ids");return s.return_dict_in_generate?{sequences:g,decoder_attentions:p("decoder_attentions"),cross_attentions:p("cross_attentions")}:g}addAttentionsToBeam(e,s){if(this.config.is_encoder_decoder){if(!s.cross_attentions||0===s.cross_attentions.length)throw Error("`output_attentions` is true, but the model did not produce cross-attentions. This is most likely because the model was not exported with `output_attentions=True`.");e.cross_attentions||(e.cross_attentions=[]),e.cross_attentions.push(s.cross_attentions)}if(!s.decoder_attentions||0===s.decoder_attentions.length)throw Error("`output_attentions` is true, but the model did not produce decoder-attentions. This is most likely because the model was not exported with `output_attentions=True`.");e.decoder_attentions||(e.decoder_attentions=[]),e.decoder_attentions.push(s.decoder_attentions)}groupBeams(e){let s=Object.create(null);for(let t of e)void 0===s[t.id]?s[t.id]=[t]:s[t.id].push(t);return Object.values(s)}getPastKeyValues(e,s){let t=Object.create(null);for(let n in e)if(n.startsWith("present")){let a=n.replace("present","past_key_values");s&&n.includes("encoder")?t[a]=s[a]:t[a]=e[n]}return t}getAttentions(e){let s=Object.create(null);for(let t of["cross_attentions","decoder_attentions"]){let n=[];for(let s in e)s.startsWith(t)&&(n[s.split(".").pop()]=e[s]);s[t]=n}return s}addPastKeyValues(e,s){if(s)Object.assign(e,s);else if(this.config.is_encoder_decoder&&(this.add_encoder_pkv??!0)){let s=[1,this.num_encoder_heads,0,this.encoder_dim_kv],t=[1,this.num_decoder_heads,0,this.decoder_dim_kv];for(let n=0;n<this.num_decoder_layers;++n)e[`past_key_values.${n}.encoder.key`]=new r.es("float32",[],s),e[`past_key_values.${n}.encoder.value`]=new r.es("float32",[],s),e[`past_key_values.${n}.decoder.key`]=new r.es("float32",[],t),e[`past_key_values.${n}.decoder.value`]=new r.es("float32",[],t)}else if("falcon"===this.config.model_type){let s=[1*this.num_heads,0,this.dim_kv];for(let t=0;t<this.num_layers;++t)e[`past_key_values.${t}.key`]=new r.es("float32",[],s),e[`past_key_values.${t}.value`]=new r.es("float32",[],s)}else if(this.config.multi_query){let s=[1*this.num_heads,0,2*this.dim_kv];for(let t=0;t<this.num_layers;++t)e[`past_key_values.${t}.key_value`]=new r.es("float32",[],s)}else if("bloom"===this.config.model_type){let s=[1*this.num_heads,this.dim_kv,0],t=[1*this.num_heads,0,this.dim_kv];for(let n=0;n<this.num_layers;++n)e[`past_key_values.${n}.key`]=new r.es("float32",[],s),e[`past_key_values.${n}.value`]=new r.es("float32",[],t)}else{let s=[1,this.num_heads,0,this.dim_kv];for(let t=0;t<this.num_layers;++t)e[`past_key_values.${t}.key`]=new r.es("float32",[],s),e[`past_key_values.${t}.value`]=new r.es("float32",[],s)}}getStartBeams(e,s,t,n){return this._getStartBeams(this,e,s,t,n)}async runBeam(e){return await this._runBeam(this,e)}updateBeam(e,s){return this._updateBeam(e,s)}}class O{}class T extends O{constructor({last_hidden_state:e,hidden_states:s=null,attentions:t=null}){super(),this.last_hidden_state=e,this.hidden_states=s,this.attentions=t}}class B extends E{}class D extends B{}class I extends B{async _call(e){return new iT(await super._call(e))}}class N extends B{async _call(e){return new iP(await super._call(e))}}class G extends B{async _call(e){return new iO(await super._call(e))}}class q extends B{async _call(e){return new iB(await super._call(e))}}class V extends E{}class z extends V{}class j extends E{}class $ extends j{}class R extends j{async _call(e){return new iT(await super._call(e))}}class W extends j{async _call(e){return new iP(await super._call(e))}}class Q extends j{async _call(e){return new iO(await super._call(e))}}class U extends j{async _call(e){return new iB(await super._call(e))}}class X extends E{}class K extends X{}class H extends X{async _call(e){return new iT(await super._call(e))}}class J extends X{async _call(e){return new iP(await super._call(e))}}class Z extends X{async _call(e){return new iO(await super._call(e))}}class Y extends X{async _call(e){return new iB(await super._call(e))}}class ee extends E{}class es extends ee{}class et extends ee{async _call(e){return new iT(await super._call(e))}}class en extends ee{async _call(e){return new iP(await super._call(e))}}class ea extends ee{async _call(e){return new iO(await super._call(e))}}class ei extends ee{async _call(e){return new iB(await super._call(e))}}class eo extends E{}class er extends eo{}class el extends eo{async _call(e){return new iT(await super._call(e))}}class ec extends eo{async _call(e){return new iP(await super._call(e))}}class ed extends eo{async _call(e){return new iO(await super._call(e))}}class e_ extends eo{async _call(e){return new iB(await super._call(e))}}class eu extends E{}class eh extends eu{}class em extends eu{async _call(e){return new iT(await super._call(e))}}class ep extends eu{async _call(e){return new iP(await super._call(e))}}class ef extends eu{async _call(e){return new iO(await super._call(e))}}class eg extends eu{async _call(e){return new iB(await super._call(e))}}class ew extends E{}class ex extends ew{}class ey extends ew{async _call(e){return new iT(await super._call(e))}}class eM extends ew{async _call(e){return new iP(await super._call(e))}}class ek extends ew{async _call(e){return new iO(await super._call(e))}}class eb extends ew{async _call(e){return new iB(await super._call(e))}}class ev extends E{}class eS extends ev{}class eC extends ev{async _call(e){return new iP(await super._call(e))}}class eF extends ev{async _call(e){return new iO(await super._call(e))}}class eL extends ev{async _call(e){return new iB(await super._call(e))}}class eA extends ev{async _call(e){return new iT(await super._call(e))}}class eP extends E{}class eE extends eP{}class eO extends eP{async _call(e){return new iT(await super._call(e))}}class eT extends eP{async _call(e){return new iP(await super._call(e))}}class eB extends eP{async _call(e){return new iO(await super._call(e))}}class eD extends E{}class eI extends eD{}class eN extends eD{async _call(e){return new iT(await super._call(e))}}class eG extends eD{async _call(e){return new iP(await super._call(e))}}class eq extends eD{async _call(e){return new iB(await super._call(e))}}class eV extends E{}class ez extends eV{}class ej extends eV{async _call(e){return new iT(await super._call(e))}}class e$ extends eV{async _call(e){return new iP(await super._call(e))}}class eR extends eV{async _call(e){return new iO(await super._call(e))}}class eW extends eV{async _call(e){return new iB(await super._call(e))}}class eQ extends E{}class eU extends eQ{}class eX extends eQ{async _call(e){return new iT(await super._call(e))}}class eK extends eQ{async _call(e){return new iP(await super._call(e))}}class eH extends eQ{async _call(e){return new iB(await super._call(e))}}class eJ extends E{}class eZ extends eJ{}class eY extends eJ{async _call(e){return new iP(await super._call(e))}}class e2 extends eJ{async _call(e){return new iB(await super._call(e))}}class e0 extends eJ{async _call(e){return new iT(await super._call(e))}}class e1 extends E{}class e4 extends e1{}class e5 extends e1{constructor(e,s,t,n){super(e,s),this.decoder_merged_session=t,this.generation_config=n,this.num_decoder_layers=this.config.num_decoder_layers,this.num_decoder_heads=this.config.num_heads,this.decoder_dim_kv=this.config.d_kv,this.num_encoder_layers=this.config.num_layers,this.num_encoder_heads=this.config.num_heads,this.encoder_dim_kv=this.config.d_kv}}class e3 extends E{}class e6 extends e3{}class e7 extends e3{constructor(e,s,t,n){super(e,s),this.decoder_merged_session=t,this.generation_config=n,this.num_decoder_layers=this.config.num_decoder_layers,this.num_decoder_heads=this.config.num_heads,this.decoder_dim_kv=this.config.d_kv,this.num_encoder_layers=this.config.num_layers,this.num_encoder_heads=this.config.num_heads,this.encoder_dim_kv=this.config.d_kv}}class e9 extends E{}class e8 extends e9{}class se extends e9{constructor(e,s,t,n){super(e,s),this.decoder_merged_session=t,this.generation_config=n,this.num_decoder_layers=this.config.num_decoder_layers,this.num_decoder_heads=this.config.num_heads,this.decoder_dim_kv=this.config.d_kv,this.num_encoder_layers=this.config.num_layers,this.num_encoder_heads=this.config.num_heads,this.encoder_dim_kv=this.config.d_kv}}class ss extends E{}class st extends ss{}class sn extends ss{constructor(e,s,t,n){super(e,s),this.decoder_merged_session=t,this.generation_config=n,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class sa extends ss{async _call(e){return new iP(await super._call(e))}}class si extends E{}class so extends si{}class sr extends si{constructor(e,s,t,n){super(e,s),this.decoder_merged_session=t,this.generation_config=n,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class sl extends si{async _call(e){return new iP(await super._call(e))}}class sc extends si{constructor(e,s,t){super(e,s),this.generation_config=t,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class sd extends E{}class s_ extends sd{}class su extends sd{constructor(e,s,t,n){super(e,s),this.decoder_merged_session=t,this.generation_config=n,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class sh extends E{}class sm extends sh{}class sp extends sh{constructor(e,s,t,n){super(e,s),this.decoder_merged_session=t,this.generation_config=n,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class sf extends E{}class sg extends sf{}class sw extends sf{async _call(e){return new iT(await super._call(e))}}class sx extends sf{async _call(e){return new iP(await super._call(e))}}class sy extends sf{async _call(e){return new iO(await super._call(e))}}class sM extends sf{async _call(e){return new iB(await super._call(e))}}class sk extends E{}class sb extends sk{}class sv extends sk{async _call(e){return new iT(await super._call(e))}}class sS extends sk{async _call(e){return new iP(await super._call(e))}}class sC extends sk{async _call(e){return new iO(await super._call(e))}}class sF extends sk{async _call(e){return new iB(await super._call(e))}}class sL extends E{}class sA extends sL{}class sP extends sL{async _call(e){return new iT(await super._call(e))}}class sE extends sL{async _call(e){return new iP(await super._call(e))}}class sO extends sL{async _call(e){return new iO(await super._call(e))}}class sT extends sL{async _call(e){return new iB(await super._call(e))}}class sB extends E{}class sD extends sB{}class sI extends sB{}class sN extends E{}class sG extends sN{}class sq extends sN{requires_attention_mask=!1;main_input_name="input_features";constructor(e,s,t,n){super(e,s),this.decoder_merged_session=t,this.generation_config=n,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}async generate(e,s=null,t=null){if(s=this._get_generation_config(s),s.return_timestamps??=!1,s.return_timestamps&&(t=[new o.Pg(s)]),s.return_token_timestamps&&(s.output_attentions=!0,s.return_dict_in_generate=!0,"translate"===s.task&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),!s.alignment_heads))throw Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");let n=await super.generate(e,s,t);return s.return_token_timestamps&&s.alignment_heads&&(n.token_timestamps=this._extract_token_timestamps(n,s.alignment_heads,s.num_frames)),n}_extract_token_timestamps(e,s,t=null,n=.02){if(!e.cross_attentions)throw Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");let i=this.config.median_filter_width;void 0===i&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),i=7);let o=e.cross_attentions.map(e=>{let n=Array.from({length:this.config.decoder_layers},(s,t)=>(0,r.d3)(e.map(e=>e[t]),2)),a=(0,r.kn)(s.map(([e,s])=>t?n[e].slice(null,s,null,[0,t]):n[e].slice(null,s)));a=a.transpose(1,0,2,3);let[o,l]=(0,r.f3)(a,-2,0,!0),d=a.clone();for(let e=0;e<d.dims[0];++e){let s=d[e];for(let t=0;t<s.dims[0];++t){let n=s[t],a=o[e][t][0],r=l[e][t][0];for(let e=0;e<n.dims[0];++e){let s=n[e];for(let e=0;e<s.data.length;++e)s.data[e]=(s.data[e]-r.data[e])/a.data[e];s.data.set((0,c.medianFilter)(s.data,i))}}}return(0,r.J6)(d,1)}),l=[e.sequences.length,e.sequences[0].length],d=new r.es("float32",new Float32Array(l[0]*l[1]),l);for(let e=0;e<l[0];++e){let s=o[e].neg().squeeze_(0),[t,i]=(0,r.Ks)(s),l=Array.from({length:t.length-1},(e,s)=>t[s+1]-t[s]),c=(0,a.eG)([1],l).map(e=>!!e),_=[];for(let e=0;e<c.length;++e)c[e]&&_.push(i[e]*n);d[e].data.set(_,1)}return d}}class sV extends E{main_input_name="pixel_values";constructor(e,s,t,n){super(e,s),this.decoder_merged_session=t,this.generation_config=n;let a=this.config.encoder,i=this.config.decoder,o=a.model_type;(aI.get(o)??aN.get(o))||console.warn(`Model type for encoder '${o}' not found, assuming encoder-only architecture. Please report this at https://github.com/xenova/transformers.js/issues/new/choose.`);let r=aW.get(i.model_type);if(!r)throw Error(`Unable to construct \`VisionEncoderDecoder\` due to unsupported decoder: "${this.config.decoder.model_type}"`);let l=new r[1](i,t,n);this.add_encoder_pkv="num_decoder_layers"in l,this.add_encoder_pkv?(this.num_decoder_layers=l.num_decoder_layers,this.num_decoder_heads=l.num_decoder_heads,this.decoder_dim_kv=l.decoder_dim_kv,this.num_encoder_layers=l.num_encoder_layers,this.num_encoder_heads=l.num_encoder_heads,this.encoder_dim_kv=l.encoder_dim_kv):(this.num_layers=l.num_layers,this.num_heads=l.num_heads,this.dim_kv=l.dim_kv)}}class sz extends E{}class sj extends sz{}class s$ extends sz{static async from_pretrained(e,s={}){return s.model_file_name??="text_model",super.from_pretrained(e,s)}}class sR extends sz{static async from_pretrained(e,s={}){return s.model_file_name??="vision_model",super.from_pretrained(e,s)}}class sW extends E{}class sQ extends sW{}class sU extends sW{static async from_pretrained(e,s={}){return s.model_file_name??="text_model",super.from_pretrained(e,s)}}class sX extends sz{static async from_pretrained(e,s={}){return s.model_file_name??="vision_model",super.from_pretrained(e,s)}}class sK extends E{}class sH extends sK{}class sJ extends E{}class sZ extends sJ{}class sY extends sJ{}class s2 extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.n_embd/this.num_heads}}class s0 extends s2{}class s1 extends s2{}class s4 extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_heads,this.num_layers=this.config.num_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class s5 extends s4{}class s3 extends s4{}class s6 extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class s7 extends s6{}class s9 extends s6{}class s8 extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.n_embd/this.num_heads}}class te extends s8{}class ts extends s8{}class tt extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.n_embd/this.num_heads}}class tn extends tt{}class ta extends tt{}class ti extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.n_embd/this.num_heads}}class to extends ti{}class tr extends ti{}class tl extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_key_value_heads??this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.config.num_attention_heads}}class tc extends tl{}class td extends tl{}class t_ extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_key_value_heads??this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.config.num_attention_heads}}class tu extends t_{}class th extends t_{}class tm extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class tp extends tm{}class tf extends tm{}class tg extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.hidden_size/this.num_heads}}class tw extends tg{}class tx extends tg{}class ty extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_heads,this.num_layers=this.config.n_layers,this.dim_kv=this.config.d_model/this.num_heads}}class tM extends ty{}class tk extends ty{}class tb extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class tv extends tb{}class tS extends tb{}class tC extends E{}class tF extends tC{}class tL extends tC{async _call(e){return new iP(await super._call(e))}}class tA extends E{}class tP extends tA{}class tE extends tA{async _call(e){return new iP(await super._call(e))}}class tO extends E{}class tT extends tO{async _call(e){return new iN(await super._call(e))}}class tB extends E{}class tD extends tB{}class tI extends tB{async _call(e){return new iP(await super._call(e))}}class tN extends E{}class tG extends tN{}class tq extends tN{async _call(e){return new iP(await super._call(e))}}class tV extends E{}class tz extends tV{}class tj extends tV{}class t$ extends E{}class tR extends t${}class tW extends t${}class tQ extends E{}class tU extends tQ{}class tX extends tQ{async _call(e){return new iP(await super._call(e))}}class tK extends E{}class tH extends tK{}class tJ extends tK{async _call(e){return new tY(await super._call(e))}}class tZ extends tK{async _call(e){return new t2(await super._call(e))}}class tY extends O{constructor({logits:e,pred_boxes:s}){super(),this.logits=e,this.pred_boxes=s}}class t2 extends O{constructor({logits:e,pred_boxes:s,pred_masks:t}){super(),this.logits=e,this.pred_boxes=s,this.pred_masks=t}}class t0 extends E{}class t1 extends t0{}class t4 extends t0{async _call(e){return new t5(await super._call(e))}}class t5 extends tY{}class t3 extends E{}class t6 extends t3{}class t7 extends t3{async _call(e){return new iP(await super._call(e))}}class t9 extends E{}class t8 extends t9{}class ne extends t9{async _call(e){return new iP(await super._call(e))}}class ns extends E{}class nt extends ns{}class nn extends ns{async _call(e){return new iP(await super._call(e))}}class na extends E{}class ni extends na{}class no extends na{}class nr extends E{}class nl extends nr{}class nc extends nr{}class nd extends E{}class n_ extends nd{}class nu extends E{}class nh extends nu{}class nm extends nu{}class np extends E{}class nf extends np{}class ng extends E{}class nw extends ng{}class nx extends ng{async _call(e){return new iP(await super._call(e))}}class ny extends E{}class nM extends ny{}class nk extends ny{async _call(e){return new iP(await super._call(e))}}class nb extends E{}class nv extends nb{}class nS extends nb{async _call(e){return new iP(await super._call(e))}}class nC extends E{}class nF extends nC{}class nL extends nC{async _call(e){return new nA(await super._call(e))}}class nA extends O{constructor({logits:e,pred_boxes:s}){super(),this.logits=e,this.pred_boxes=s}}class nP extends E{}class nE extends nP{constructor(e,s,t){super(e,s),this.prompt_encoder_mask_decoder=t}async get_image_embeddings({pixel_values:e}){return await C(this,{pixel_values:e})}async forward(e){if(e.image_embeddings&&e.image_positional_embeddings||(e={...e,...await this.get_image_embeddings(e)}),!e.input_labels){let s=e.input_points.dims.slice(0,-1),t=s.reduce((e,s)=>e*s,1);e.input_labels=new r.es("int64",new BigInt64Array(t).fill(1n),s)}return await w(this.prompt_encoder_mask_decoder,{input_points:e.input_points,input_labels:e.input_labels,image_embeddings:e.image_embeddings,image_positional_embeddings:e.image_positional_embeddings})}async _call(e){return new nO(await super._call(e))}}class nO extends O{constructor({iou_scores:e,pred_masks:s}){super(),this.iou_scores=e,this.pred_masks=s}}class nT extends E{}class nB extends nT{}class nD extends nT{constructor(e,s,t,n){super(e,s),this.decoder_merged_session=t,this.generation_config=n,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class nI extends E{}class nN extends nI{}class nG extends nI{constructor(e,s,t,n){super(e,s),this.decoder_merged_session=t,this.generation_config=n,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class nq extends E{}class nV extends nq{}class nz extends nq{async _call(e){return new iD(await super._call(e))}}class nj extends nq{async _call(e){return new iP(await super._call(e))}}class n$ extends nq{async _call(e){return new iO(await super._call(e))}}class nR extends E{}class nW extends nR{}class nQ extends nR{async _call(e){return new iD(await super._call(e))}}class nU extends nR{async _call(e){return new iP(await super._call(e))}}class nX extends E{}class nK extends nX{}class nH extends nX{async _call(e){return new iD(await super._call(e))}}class nJ extends nX{async _call(e){return new iP(await super._call(e))}}class nZ extends nX{async _call(e){return new iO(await super._call(e))}}class nY extends E{}class n2 extends nY{}class n0 extends nY{async _call(e){return new iD(await super._call(e))}}class n1 extends nY{async _call(e){return new iP(await super._call(e))}}class n4 extends E{}class n5 extends nq{}class n3 extends nq{async _call(e){return new iD(await super._call(e))}}class n6 extends nq{async _call(e){return new iP(await super._call(e))}}class n7 extends E{}class n9 extends n7{}class n8 extends n7{async _call(e){return new iD(await super._call(e))}}class ae extends n7{async _call(e){return new iP(await super._call(e))}}class as extends n7{async _call(e){return new iE(await super._call(e))}}class at extends n7{async _call(e){return new iO(await super._call(e))}}class an extends E{}class aa extends an{}class ai extends an{}class ao extends an{constructor(e,s,t,n){super(e,s),this.decoder_merged_session=t,this.generation_config=n,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.hidden_size/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.hidden_size/this.num_encoder_heads}async generate_speech(e,s,{threshold:t=.5,minlenratio:n=0,maxlenratio:a=20,vocoder:i=null}={}){let{encoder_outputs:o,encoder_attention_mask:l}=await C(this,{input_ids:e}),c=o.dims[1]/this.config.reduction_factor,d=Math.floor(c*a),_=Math.floor(c*n),u=this.config.num_mel_bins,h=[],m=null,p=null,f=0;for(;;){++f;let e={use_cache_branch:M(!!p),output_sequence:p?p.output_sequence_out:new r.es("float32",new Float32Array(u),[1,1,u]),encoder_attention_mask:l,speaker_embeddings:s,encoder_hidden_states:o};this.addPastKeyValues(e,m),p=await w(this.decoder_merged_session,e),m=this.getPastKeyValues(p,m);let{prob:n,spectrum:a}=p;if(h.push(a),f>=_&&(Array.from(n.data).filter(e=>e>=t).length>0||f>=d))break}let g=(0,r.d3)(h),{waveform:x}=await w(i.session,{spectrogram:g});return{spectrogram:g,waveform:x}}}class ar extends E{main_input_name="spectrogram"}class al extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_encoder_layers=this.num_decoder_layers=this.config.decoder_layers,this.num_encoder_heads=this.num_decoder_heads=this.config.decoder_attention_heads,this.encoder_dim_kv=this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads}}class ac extends al{}class ad extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_key_value_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.config.num_attention_heads}}class a_ extends ad{}class au extends ad{}class ah extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_key_value_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.config.num_attention_heads}}class am extends ah{}class ap extends ah{}class af extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.config.num_attention_heads}}class ag extends af{}class aw extends af{}class ax extends E{}class ay extends ax{}class aM extends ax{static async from_pretrained(e,s={}){return s.model_file_name??="text_model",super.from_pretrained(e,s)}}class ak extends ax{static async from_pretrained(e,s={}){return s.model_file_name??="audio_model",super.from_pretrained(e,s)}}class ab extends E{}class av extends ab{async _call(e){return new iG(await super._call(e))}}class aS extends E{}class aC extends aS{}class aF extends aS{}class aL extends aS{}class aA extends E{constructor(e,s,t){super(e,s),this.generation_config=t,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class aP extends aA{}class aE extends aA{}class aO extends E{}class aT extends aO{}class aB extends aO{async _call(e){return new iP(await super._call(e))}}class aD{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(e,{quantized:s=!0,progress_callback:t=null,config:a=null,cache_dir:i=null,local_files_only:o=!1,revision:r="main",model_file_name:l=null}={}){let c={quantized:s,progress_callback:t,config:a,cache_dir:i,local_files_only:o,revision:r,model_file_name:l};if(a=await n.z.from_pretrained(e,c),c.config||(c.config=a),!this.MODEL_CLASS_MAPPINGS)throw Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(let s of this.MODEL_CLASS_MAPPINGS){let t=s.get(a.model_type);if(t)return await t[1].from_pretrained(e,c)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${a.model_type}", attempting to construct from base class.`),await E.from_pretrained(e,c);throw Error(`Unsupported model type: ${a.model_type}`)}}let aI=new Map([["bert",["BertModel",D]],["nomic_bert",["NomicBertModel",z]],["roformer",["RoFormerModel",$]],["electra",["ElectraModel",es]],["esm",["EsmModel",eE]],["convbert",["ConvBertModel",K]],["camembert",["CamembertModel",er]],["deberta",["DebertaModel",eh]],["deberta-v2",["DebertaV2Model",ex]],["mpnet",["MPNetModel",ez]],["albert",["AlbertModel",eZ]],["distilbert",["DistilBertModel",eS]],["roberta",["RobertaModel",sg]],["xlm",["XLMModel",sb]],["xlm-roberta",["XLMRobertaModel",sA]],["clap",["ClapModel",ay]],["clip",["CLIPModel",sj]],["clipseg",["CLIPSegModel",sZ]],["chinese_clip",["ChineseCLIPModel",sH]],["siglip",["SiglipModel",sQ]],["mobilebert",["MobileBertModel",eI]],["squeezebert",["SqueezeBertModel",eU]],["wav2vec2",["Wav2Vec2Model",nV]],["wav2vec2-bert",["Wav2Vec2BertModel",n2]],["unispeech",["UniSpeechModel",nW]],["unispeech-sat",["UniSpeechSatModel",nK]],["hubert",["HubertModel",n5]],["wavlm",["WavLMModel",n9]],["audio-spectrogram-transformer",["ASTModel",sD]],["vits",["VitsModel",av]],["detr",["DetrModel",tH]],["table-transformer",["TableTransformerModel",t1]],["vit",["ViTModel",tF]],["fastvit",["FastViTModel",tP]],["mobilevit",["MobileViTModel",tD]],["mobilevitv2",["MobileViTV2Model",tG]],["owlvit",["OwlViTModel",tz]],["owlv2",["Owlv2Model",tR]],["beit",["BeitModel",tU]],["deit",["DeiTModel",t6]],["convnext",["ConvNextModel",nw]],["convnextv2",["ConvNextV2Model",nM]],["dinov2",["Dinov2Model",nv]],["resnet",["ResNetModel",t8]],["swin",["SwinModel",nt]],["swin2sr",["Swin2SRModel",ni]],["donut-swin",["DonutSwinModel",nf]],["yolos",["YolosModel",nF]],["dpt",["DPTModel",nl]],["glpn",["GLPNModel",nh]],["hifigan",["SpeechT5HifiGan",ar]],["efficientnet",["EfficientNetModel",aT]]]),aN=new Map([["t5",["T5Model",e4]],["longt5",["LongT5Model",e6]],["mt5",["MT5Model",e8]],["bart",["BartModel",st]],["mbart",["MBartModel",so]],["marian",["MarianModel",nB]],["whisper",["WhisperModel",sG]],["m2m_100",["M2M100Model",nN]],["blenderbot",["BlenderbotModel",s_]],["blenderbot-small",["BlenderbotSmallModel",sm]]]),aG=new Map([["bloom",["BloomModel",tw]],["gpt2",["GPT2Model",s0]],["gptj",["GPTJModel",te]],["gpt_bigcode",["GPTBigCodeModel",tn]],["gpt_neo",["GPTNeoModel",s5]],["gpt_neox",["GPTNeoXModel",s7]],["codegen",["CodeGenModel",to]],["llama",["LlamaModel",tc]],["qwen2",["Qwen2Model",tu]],["phi",["PhiModel",tp]],["mpt",["MptModel",tM]],["opt",["OPTModel",tv]],["mistral",["MistralModel",a_]],["starcoder2",["Starcoder2Model",am]],["falcon",["FalconModel",ag]]]),aq=new Map([["speecht5",["SpeechT5ForSpeechToText",ai]],["whisper",["WhisperForConditionalGeneration",sq]]]),aV=new Map([["speecht5",["SpeechT5ForTextToSpeech",ao]]]),az=new Map([["vits",["VitsModel",av]]]),aj=new Map([["bert",["BertForSequenceClassification",N]],["roformer",["RoFormerForSequenceClassification",W]],["electra",["ElectraForSequenceClassification",en]],["esm",["EsmForSequenceClassification",eT]],["convbert",["ConvBertForSequenceClassification",J]],["camembert",["CamembertForSequenceClassification",ec]],["deberta",["DebertaForSequenceClassification",ep]],["deberta-v2",["DebertaV2ForSequenceClassification",eM]],["mpnet",["MPNetForSequenceClassification",e$]],["albert",["AlbertForSequenceClassification",eY]],["distilbert",["DistilBertForSequenceClassification",eC]],["roberta",["RobertaForSequenceClassification",sx]],["xlm",["XLMForSequenceClassification",sS]],["xlm-roberta",["XLMRobertaForSequenceClassification",sE]],["bart",["BartForSequenceClassification",sa]],["mbart",["MBartForSequenceClassification",sl]],["mobilebert",["MobileBertForSequenceClassification",eG]],["squeezebert",["SqueezeBertForSequenceClassification",eK]]]),a$=new Map([["bert",["BertForTokenClassification",G]],["roformer",["RoFormerForTokenClassification",Q]],["electra",["ElectraForTokenClassification",ea]],["esm",["EsmForTokenClassification",eB]],["convbert",["ConvBertForTokenClassification",Z]],["camembert",["CamembertForTokenClassification",ed]],["deberta",["DebertaForTokenClassification",ef]],["deberta-v2",["DebertaV2ForTokenClassification",ek]],["mpnet",["MPNetForTokenClassification",eR]],["distilbert",["DistilBertForTokenClassification",eF]],["roberta",["RobertaForTokenClassification",sy]],["xlm",["XLMForTokenClassification",sC]],["xlm-roberta",["XLMRobertaForTokenClassification",sO]]]),aR=new Map([["t5",["T5ForConditionalGeneration",e5]],["longt5",["LongT5ForConditionalGeneration",e7]],["mt5",["MT5ForConditionalGeneration",se]],["bart",["BartForConditionalGeneration",sn]],["mbart",["MBartForConditionalGeneration",sr]],["marian",["MarianMTModel",nD]],["m2m_100",["M2M100ForConditionalGeneration",nG]],["blenderbot",["BlenderbotForConditionalGeneration",su]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",sp]]]),aW=new Map([["bloom",["BloomForCausalLM",tx]],["gpt2",["GPT2LMHeadModel",s1]],["gptj",["GPTJForCausalLM",ts]],["gpt_bigcode",["GPTBigCodeForCausalLM",ta]],["gpt_neo",["GPTNeoForCausalLM",s3]],["gpt_neox",["GPTNeoXForCausalLM",s9]],["codegen",["CodeGenForCausalLM",tr]],["llama",["LlamaForCausalLM",td]],["qwen2",["Qwen2ForCausalLM",th]],["phi",["PhiForCausalLM",tf]],["mpt",["MptForCausalLM",tk]],["opt",["OPTForCausalLM",tS]],["mbart",["MBartForCausalLM",sc]],["mistral",["MistralForCausalLM",au]],["starcoder2",["Starcoder2ForCausalLM",ap]],["falcon",["FalconForCausalLM",aw]],["trocr",["TrOCRForCausalLM",ac]],["stablelm",["StableLmForCausalLM",aE]]]),aQ=new Map([["bert",["BertForMaskedLM",I]],["roformer",["RoFormerForMaskedLM",R]],["electra",["ElectraForMaskedLM",et]],["esm",["EsmForMaskedLM",eO]],["convbert",["ConvBertForMaskedLM",H]],["camembert",["CamembertForMaskedLM",el]],["deberta",["DebertaForMaskedLM",em]],["deberta-v2",["DebertaV2ForMaskedLM",ey]],["mpnet",["MPNetForMaskedLM",ej]],["albert",["AlbertForMaskedLM",e0]],["distilbert",["DistilBertForMaskedLM",eA]],["roberta",["RobertaForMaskedLM",sw]],["xlm",["XLMWithLMHeadModel",sv]],["xlm-roberta",["XLMRobertaForMaskedLM",sP]],["mobilebert",["MobileBertForMaskedLM",eN]],["squeezebert",["SqueezeBertForMaskedLM",eX]]]),aU=new Map([["bert",["BertForQuestionAnswering",q]],["roformer",["RoFormerForQuestionAnswering",U]],["electra",["ElectraForQuestionAnswering",ei]],["convbert",["ConvBertForQuestionAnswering",Y]],["camembert",["CamembertForQuestionAnswering",e_]],["deberta",["DebertaForQuestionAnswering",eg]],["deberta-v2",["DebertaV2ForQuestionAnswering",eb]],["mpnet",["MPNetForQuestionAnswering",eW]],["albert",["AlbertForQuestionAnswering",e2]],["distilbert",["DistilBertForQuestionAnswering",eL]],["roberta",["RobertaForQuestionAnswering",sM]],["xlm",["XLMForQuestionAnswering",sF]],["xlm-roberta",["XLMRobertaForQuestionAnswering",sT]],["mobilebert",["MobileBertForQuestionAnswering",eq]],["squeezebert",["SqueezeBertForQuestionAnswering",eH]]]),aX=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",sV]]]),aK=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",sV]]]),aH=new Map([["vit",["ViTForImageClassification",tL]],["fastvit",["FastViTForImageClassification",tE]],["mobilevit",["MobileViTForImageClassification",tI]],["mobilevitv2",["MobileViTV2ForImageClassification",tq]],["beit",["BeitForImageClassification",tX]],["deit",["DeiTForImageClassification",t7]],["convnext",["ConvNextForImageClassification",nx]],["convnextv2",["ConvNextV2ForImageClassification",nk]],["dinov2",["Dinov2ForImageClassification",nS]],["resnet",["ResNetForImageClassification",ne]],["swin",["SwinForImageClassification",nn]],["segformer",["SegformerForImageClassification",aF]],["efficientnet",["EfficientNetForImageClassification",aB]]]),aJ=new Map([["detr",["DetrForObjectDetection",tJ]],["table-transformer",["TableTransformerForObjectDetection",t4]],["yolos",["YolosForObjectDetection",nL]]]),aZ=new Map([["owlvit",["OwlViTForObjectDetection",tj]],["owlv2",["Owlv2ForObjectDetection",tW]]]),aY=new Map([["detr",["DetrForSegmentation",tZ]],["clipseg",["CLIPSegForImageSegmentation",sY]]]),a2=new Map([["segformer",["SegformerForSemanticSegmentation",aL]]]),a0=new Map([["sam",["SamModel",nE]]]),a1=new Map([["wav2vec2",["Wav2Vec2ForCTC",nz]],["wav2vec2-bert",["Wav2Vec2BertForCTC",n0]],["unispeech",["UniSpeechForCTC",nQ]],["unispeech-sat",["UniSpeechSatForCTC",nH]],["wavlm",["WavLMForCTC",n8]],["hubert",["HubertForCTC",n3]]]),a4=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",nj]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",n1]],["unispeech",["UniSpeechForSequenceClassification",nU]],["unispeech-sat",["UniSpeechSatForSequenceClassification",nJ]],["wavlm",["WavLMForSequenceClassification",ae]],["hubert",["HubertForSequenceClassification",n6]],["audio-spectrogram-transformer",["ASTForAudioClassification",sI]]]),a5=new Map([["wavlm",["WavLMForXVector",as]]]),a3=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",nZ]],["wavlm",["WavLMForAudioFrameClassification",at]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",n$]]]),a6=new Map([["vitmatte",["VitMatteForImageMatting",tT]]]),a7=new Map([["swin2sr",["Swin2SRForImageSuperResolution",no]]]),a9=new Map([["dpt",["DPTForDepthEstimation",nc]],["depth_anything",["DepthAnythingForDepthEstimation",n_]],["glpn",["GLPNForDepthEstimation",nm]]]),a8=new Map([["clip",["CLIPVisionModelWithProjection",sR]],["siglip",["SiglipVisionModel",sX]]]),ie=[[aI,h.EncoderOnly],[aN,h.EncoderDecoder],[aG,h.DecoderOnly],[aj,h.EncoderOnly],[a$,h.EncoderOnly],[aR,h.Seq2Seq],[aq,h.Seq2Seq],[aW,h.DecoderOnly],[aQ,h.EncoderOnly],[aU,h.EncoderOnly],[aX,h.Vision2Seq],[aH,h.EncoderOnly],[aY,h.EncoderOnly],[a2,h.EncoderOnly],[a6,h.EncoderOnly],[a7,h.EncoderOnly],[a9,h.EncoderOnly],[aJ,h.EncoderOnly],[aZ,h.EncoderOnly],[a0,h.MaskGeneration],[a1,h.EncoderOnly],[a4,h.EncoderOnly],[aV,h.Seq2Seq],[az,h.EncoderOnly],[a5,h.EncoderOnly],[a3,h.EncoderOnly],[a8,h.EncoderOnly]];for(let[e,s]of ie)for(let[t,n]of e.values())m.set(t,s),f.set(n,t),p.set(t,n);for(let[e,s,t]of[["CLIPTextModelWithProjection",s$,h.EncoderOnly],["SiglipTextModel",sU,h.EncoderOnly],["ClapTextModelWithProjection",aM,h.EncoderOnly],["ClapAudioModelWithProjection",ak,h.EncoderOnly]])m.set(e,t),f.set(s,e),p.set(e,s);class is extends aD{static MODEL_CLASS_MAPPINGS=ie.map(e=>e[0]);static BASE_IF_FAIL=!0}class it extends aD{static MODEL_CLASS_MAPPINGS=[aj]}class ia extends aD{static MODEL_CLASS_MAPPINGS=[a$]}class ii extends aD{static MODEL_CLASS_MAPPINGS=[aR]}class io extends aD{static MODEL_CLASS_MAPPINGS=[aq]}class ir extends aD{static MODEL_CLASS_MAPPINGS=[aV]}class il extends aD{static MODEL_CLASS_MAPPINGS=[az]}class ic extends aD{static MODEL_CLASS_MAPPINGS=[aW]}class id extends aD{static MODEL_CLASS_MAPPINGS=[aQ]}class i_ extends aD{static MODEL_CLASS_MAPPINGS=[aU]}class iu extends aD{static MODEL_CLASS_MAPPINGS=[aX]}class ih extends aD{static MODEL_CLASS_MAPPINGS=[aH]}class im extends aD{static MODEL_CLASS_MAPPINGS=[aY]}class ip extends aD{static MODEL_CLASS_MAPPINGS=[a2]}class ig extends aD{static MODEL_CLASS_MAPPINGS=[aJ]}class iw extends aD{static MODEL_CLASS_MAPPINGS=[aZ]}class ix extends aD{static MODEL_CLASS_MAPPINGS=[a0]}class iy extends aD{static MODEL_CLASS_MAPPINGS=[a1]}class iM extends aD{static MODEL_CLASS_MAPPINGS=[a4]}class ik extends aD{static MODEL_CLASS_MAPPINGS=[a5]}class ib extends aD{static MODEL_CLASS_MAPPINGS=[a3]}class iv extends aD{static MODEL_CLASS_MAPPINGS=[aK]}class iS extends aD{static MODEL_CLASS_MAPPINGS=[a6]}class iC extends aD{static MODEL_CLASS_MAPPINGS=[a7]}class iF extends aD{static MODEL_CLASS_MAPPINGS=[a9]}class iL extends aD{static MODEL_CLASS_MAPPINGS=[a8]}class iA extends O{constructor({logits:e,past_key_values:s,encoder_outputs:t,decoder_attentions:n=null,cross_attentions:a=null}){super(),this.logits=e,this.past_key_values=s,this.encoder_outputs=t,this.decoder_attentions=n,this.cross_attentions=a}}class iP extends O{constructor({logits:e}){super(),this.logits=e}}class iE extends O{constructor({logits:e,embeddings:s}){super(),this.logits=e,this.embeddings=s}}class iO extends O{constructor({logits:e}){super(),this.logits=e}}class iT extends O{constructor({logits:e}){super(),this.logits=e}}class iB extends O{constructor({start_logits:e,end_logits:s}){super(),this.start_logits=e,this.end_logits=s}}class iD extends O{constructor({logits:e}){super(),this.logits=e}}class iI extends O{constructor({logits:e,past_key_values:s}){super(),this.logits=e,this.past_key_values=s}}class iN extends O{constructor({alphas:e}){super(),this.alphas=e}}class iG extends O{constructor({waveform:e,spectrogram:s}){super(),this.waveform=e,this.spectrogram=s}}}}]);